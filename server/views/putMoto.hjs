<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Motorbike Update</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        h1 {
            text-align: center;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        .button {
            margin: 5px;
            padding: 10px 20px;
            background-color: #d3d3f7;
            color: #000;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            transition: background-color 0.3s;
        }
        .button:hover {
            background-color: #a9a9d6;
        }
        .form-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            z-index: 9;
            padding: 20px;
            box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.2);
            border-radius: 10px;
        }
        .form-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .form-container input[type=text], .form-container input[type=number], .form-container input[type=date] {
            width: calc(100% - 20px);
            padding: 10px;
            margin: 5px 0 15px 0;
            border: 1px solid #ccc;
            background: #f1f1f1;
            border-radius: 5px;
        }
        .form-container input[type=submit] {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .form-container input[type=submit]:hover {
            background-color: #45a049;
        }
        .form-container .close-btn {
            background-color: #f44336;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-top: 10px;
        }
        .form-container .close-btn:hover {
            background-color: #e60000;
        }
    </style>
</head>
<body>
    <h1>Which one do you want to update?</h1>
    <div id="motosTableBody" class="button-container"></div>

    <div class="button-container">
        <a href="/" class="button">Back</a>
    </div>

    <div id="popupForm" class="form-popup">
        <form id="updateForm" class="form-container">
            <label for="ownerId"><b>Owner</b></label>
            <input type="text" name="ownerId">
            <label for="type"><b>Type</b></label>
            <input type="text" name="type">
            <label for="brand"><b>Brand</b></label>
            <input type="number" name="brand">
            <label for="model"><b>Model</b></label>
            <input type="text" name="model">
            <label for="cc"><b>CC</b></label>
            <input type="number" name="cc">
            <label for="year"><b>Year</b></label>
            <input type="number" name="year">
            <label for="deleted"><b>Deleted</b></label>
            <input type="date" name="deleted">
            <input type="submit" value="Submit">
            <button type="button" class="close-btn" onclick="closeForm()">Close</button>
        </form>
    </div>

    <script>
        function openForm() {
            document.getElementById("popupForm").style.display = "block";
        }

        function closeForm() {
            document.getElementById("popupForm").style.display = "none";
        }

        fetch('/getMotos/allMotos')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(motos => {
                const motosTableBody = document.getElementById('motosTableBody');
                motos.forEach(moto => {
                    const button = document.createElement('button');
                    button.textContent = `${moto.model}`;
                    button.className = 'button';
                    button.addEventListener('click', () => {
                        openForm();

                        document.getElementsByName('ownerId')[0].value = moto.ownerId;
                        document.getElementsByName('type')[0].value = moto.type;
                        document.getElementsByName('brand')[0].value = moto.brand;
                        document.getElementsByName('model')[0].value = moto.model;
                        document.getElementsByName('cc')[0].value = moto.cc;
                        document.getElementsByName('year')[0].value = moto.year;
                        document.getElementsByName('deleted')[0].value = moto.deleted;

                        document.getElementById('updateForm').onsubmit = function(event) {
                            event.preventDefault();
                            const ownerId = document.getElementsByName('ownerId')[0].value;
                            const type = document.getElementsByName('type')[0].value;
                            const brand = document.getElementsByName('brand')[0].value;
                            const model = document.getElementsByName('model')[0].value;
                            const cc = document.getElementsByName('cc')[0].value;
                            const year = document.getElementsByName('year')[0].value;
                            const deleted = document.getElementsByName('deleted')[0].value;

                            const data = {
                                ownerId : ownerId,
                                type : type,
                                brand : brand,
                                model : model,
                                cc : cc,
                                year : year,
                                deleted : deleted
                            };

                            fetch('/putMoto/newMoto', {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                window.location.href = '/putMoto/updated';
                            })
                            .catch(error => console.error('Error updating motorbike:', error));
                        };
                    });
                    motosTableBody.appendChild(button);
                });
            })
            .catch(error => console.error('Error fetching motorbikes:', error));
    </script>
</body>
</html>
